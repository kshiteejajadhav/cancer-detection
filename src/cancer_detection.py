# -*- coding: utf-8 -*-
"""Markdown Guide

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/markdown_guide.ipynb
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

cell_df = pd.read_csv('data/cell_samples.csv')
cell_df.head()
cell_df['Class'].value_counts()


malignant_df = cell_df[cell_df['Class']==4][0:200]
benign_df = cell_df[cell_df['Class']==2][0:200]

axes = benign_df.plot(kind='scatter', x='Clump', y='UnifSize',color='blue',label='Benign')
malignant_df.plot(kind='scatter', x='Clump', y='UnifSize',color='red',label='Malignant',ax = axes)

cell_df = cell_df[pd.to_numeric(cell_df['BareNuc'],errors='coerce').notnull()]
cell_df['BareNuc'] = cell_df['BareNuc'].astype('int')
cell_df.dtypes



cell_df.columns
feature_df = cell_df[['Clump', 'UnifSize', 'UnifShape', 'MargAdh', 'SingEpiSize',
       'BareNuc', 'BlandChrom', 'NormNucl', 'Mit']]

#independent Variable X
X = np.asarray(feature_df)

#dependent Variable Y
Y = np.asarray(cell_df['Class'])

X[0:15]
Y[0:15]

from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size= 0.2,random_state=4)

X_train.shape #(546,9)
Y_train.shape #(546,)

X_test.shape  #(137,9)
Y_test.shape  #(137,)

from sklearn import svm

classifier = svm.SVC(kernel= 'linear',gamma='auto',C=2)
classifier.fit(X_train,Y_train)
Y_predict = classifier.predict(X_test)

from sklearn.metrics import classification_report

print (classification_report(Y_test,Y_predict))

from sklearn.metrics import confusion_matrix
confusion_matrix(Y_test,Y_predict)

from sklearn.metrics import accuracy_score
accuracy_score(Y_test, Y_predict)

"""# New section"""
